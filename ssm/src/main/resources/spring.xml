<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        ">

    <!-- 加载数据库配置 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${dataSource.driver}"/>
        <property name="url" value="${dataSource.url}"/>
        <property name="username" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${dataSource.maxTotal}"/>
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${dataSource.maxIdle}"/>
        <!-- 初始连接数 -->
        <property name="initialSize" value="${dataSource.initialSize}"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 整合Mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <!--
    第一种
    实现类方法
    在 com.randy.note.ssm.dao.impl.UserDaoImpl 中实现 UserDao 接口
    获取该Bean就可以调用UserDao的方法
    -->
    <!--<bean id="userDao" class="com.randy.note.ssm.dao.impl.UserDaoImpl">-->
    <!--    <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!--
    第二种
    Mapper配置方法
    -->
    <!--<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
    <!--    <property name="mapperInterface" value="com.randy.note.ssm.dao.UserDao"/>-->
    <!--    <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!--
    第三种（最佳 ）
    自动扫描Mapper文件
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 要扫描接口的包，可以扫描子包-->
        <property name="basePackage" value="com.randy.note.ssm.dao"/>
    </bean>
</beans>